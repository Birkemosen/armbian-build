# Rockchip RV1106G3 single core 256MB RAM SoC WIFI/BT 8GB eMMC
BOARD_NAME="Luckfox Pico Ultra W"
BOARDFAMILY="rockchip-rv1106"
BOARD_MAINTAINER=""
BOOTCONFIG="luckfox_rv1106_uboot_emmc_tb_defconfig"
KERNEL_TARGET="vendor"
KERNEL_TEST_TARGET="vendor"
FULL_DESKTOP="yes"
BOOT_LOGO="desktop"
BOOT_FDT_FILE="rockchip/rv1106g-luckfox-pico-ultra-w.dtb"
IMAGE_PARTITION_TABLE="gpt"
BOOT_SCENARIO="spl-blobs"
BOOTFS_TYPE="fat" # Only for vendor/legacy
BOOT_SUPPORT_SPI="yes"
BOOT_SPI_RKSPI_LOADER="yes"
BOOT_SOC="rv1106"

# Override family config for this board; let's avoid conditionals in family config.
function post_family_config__luckfox-pico-ultra-w_use_mainline_uboot() {
	BOOTSOURCE='https://github.com/rockchip-linux/u-boot'
	BOOTBRANCH='branch:next-dev'

	#BOOTSOURCE='https://github.com/u-boot/u-boot.git'
	#BOOTBRANCH='tag:v2025.01'
	BOOTPATCHDIR="u-boot-luckfox"

	# Override family config to disable U-Boot deployment - we just want to build the image
	UBOOT_TARGET_MAP=";;u-boot-rockchip-with-spl.bin"

	unset write_uboot_platform
	# We need to provide our own write_uboot_platform function for image creation
	# The family config provides one, but we need to customize it for our board
	
	# Override the family's write_uboot_platform function
	write_uboot_platform() {
		# For RV1106, we need to write the U-Boot image at the correct offset
		# The family config uses seek=1 with 32k blocks, but we need to verify the offset
		UBOOT_SRC="u-boot-rockchip-with-spl.bin"
		
		if [ -f "$1/$UBOOT_SRC" ]; then
			# Write U-Boot to the image at the correct offset for RV1106
			dd if="$1/$UBOOT_SRC" of="$2" seek=64 conv=notrunc status=none
			display_alert "U-Boot written to image" "$UBOOT_SRC at offset 64" "info"
		else
			display_alert "U-Boot binary not found" "$1/$UBOOT_SRC" "error"
			exit_with_error "U-Boot binary $UBOOT_SRC not found in $1"
		fi
	}
	


}


