#
# SPDX-License-Identifier: GPL-2.0
#
# Copyright (c) 2013-2023 Igor Pecovnik, igor@armbian.com
#
# This file is a part of the Armbian Build Framework
# https://github.com/armbian/build/
#
enable_extension "rkbin-tools"

# BOOT_SOC has to be set in the board configuration file; if not set
# we resort to rv1106
BOOT_SOC=${BOOT_SOC:="rv1106"}

ARCH=armhf
BOOTDELAY=1
SERIALCON=ttyFIQ0

if [[ "$BOOT_SOC" == "rv1106" ]]; then

	BOOTSCRIPT="boot-rockchip.cmd:boot.cmd"
	BOOTENV_FILE='rockchip.txt'
	OVERLAY_PREFIX='rockchip'
	UBOOT_TARGET_MAP=";;u-boot-rockchip-with-spl.bin"

	BOOTBRANCH='tag:v2025.01'
	BOOTPATCHDIR='v2025.01'

fi

# Rockchip RV1106G3 single core 256MB RAM SoC WIFI/BT eMMC USB2 RGB Display SPI
# This file is a part of the Armbian Build Framework
# https://github.com/armbian/build/
BOOTSOURCE='https://github.com/rockchip-linux/u-boot'
BOOTBRANCH='branch:next-dev'
BOOTPATCHDIR='v2025.01'
#BOOTSOURCE='https://github.com/radxa/u-boot.git'
#BOOTBRANCH='branch:next-dev-v2024.10'
#BOOTPATCHDIR="v2025.01"

# Set kernel configuration based on branch
case $BRANCH in
	legacy)
		BOOTSCRIPT='boot-rk35xx.cmd:boot.cmd'
		BOOTDIR='u-boot-rockchip'
		declare -g KERNEL_MAJOR_MINOR="5.10" # Major and minor versions of this kernel.
		declare -g -i KERNEL_GIT_CACHE_TTL=120 # 2 minutes; this is a high-traffic repo
		declare -g LINUXFAMILY=rockchip-rv1106
		declare -g LINUXCONFIG='linux-rockchip-rv1106-'$BRANCH
		KERNELSOURCE='https://github.com/armbian/linux-rockchip.git'
		KERNELBRANCH='branch:rk-5.10-rkr8'
		KERNELPATCHDIR='luckfox-rv1106-5.10'
		;;
	vendor)
		BOOTSCRIPT='boot-rk35xx.cmd:boot.cmd'
		BOOTDIR='u-boot-rockchip'
		declare -g KERNEL_MAJOR_MINOR="6.1" # Major and minor versions of this kernel.
		declare -g -i KERNEL_GIT_CACHE_TTL=120 # 2 minutes; this is a high-traffic repo
		declare -g LINUXFAMILY=rockchip-rv1106
		declare -g LINUXCONFIG='linux-rockchip-rv1106-'$BRANCH
		KERNELSOURCE='https://github.com/armbian/linux-rockchip.git'
		KERNELBRANCH='branch:rk-6.1-rkr5.1'
		KERNELPATCHDIR='luckfox-rv1106-6.1'
		;;
esac

# Kernel configuration is now set in the board configuration

CPUMIN="600000"
CPUMAX="1104000"
GOVERNOR="ondemand"

# write_uboot_platform() and uboot_custom_postprocess() functions are dependent upon SOC,
# so we declare them differently for each supported SOC. Also note that write_uboot_platform()
# is used to install the bootloader in the proper place during live systems upgrade.
if [[ "$BOOT_SOC" == "rv1106" ]]; then

	write_uboot_platform() {

		UBOOT_SRC="u-boot-rockchip-with-spl.bin"

		dd if=/dev/zero of=$2 bs=32k count=63 seek=1 status=noxfer > /dev/null 2>&1
		dd if=$1/$UBOOT_SRC of=$2 bs=32k seek=1 conv=notrunc

	}

	uboot_custom_postprocess() {
		# RV1106 uses mainline U-Boot with SPL
		# Create idbloader.img from TPL and SPL (following Rockchip docs)
		run_host_command_logged cat tpl/u-boot-tpl.bin > idbloader.img
		run_host_command_logged cat spl/u-boot-spl.bin >> idbloader.img
		
		# Create u-boot.itb from u-boot-dtb.bin (following Rockchip docs)
		# For SPL-based booting, we need u-boot.itb, not u-boot-dtb.img
		run_host_command_logged cp u-boot-dtb.bin u-boot.itb
		
		# Create the combined binary using u-boot.itb (FIT image)
		run_host_command_logged cat idbloader.img > u-boot-rockchip-with-spl.bin
		run_host_command_logged dd if=u-boot.itb of=u-boot-rockchip-with-spl.bin seek=$((0x200 - 0x40)) conv=notrunc
	}

fi

family_tweaks() {

	# Create gpio and i2c groups on the build rootfs; they are matched against
	# udev rules to allow non-root user access to these resources
	chroot_sdcard addgroup --system --quiet --gid 900 gpio
	chroot_sdcard addgroup --system --quiet --gid 901 i2c

	return 0

}

family_tweaks_bsp() {
	#Graphics and media
	mkdir -p $destination/etc/udev/rules.d
	mkdir -p $destination/usr/local/bin
	cp $SRC/packages/bsp/rockchip/hdmi.rules $destination/etc/udev/rules.d
	cp $SRC/packages/bsp/rockchip/50-hevc.rules $destination/etc/udev/rules.d
	cp $SRC/packages/bsp/rockchip/50-mali.rules $destination/etc/udev/rules.d
	cp $SRC/packages/bsp/rockchip/50-vpu.rules $destination/etc/udev/rules.d
	cp $SRC/packages/bsp/rockchip/60-media.rules $destination/etc/udev/rules.d
	install -m 755 $SRC/packages/bsp/rockchip/hdmi-hotplug $destination/usr/local/bin

	# Peripheral access for specific groups
	cp $SRC/packages/bsp/rockchip/70-gpio.rules $destination/etc/udev/rules.d
	cp $SRC/packages/bsp/rockchip/71-i2c.rules $destination/etc/udev/rules.d

	# Sound
	cp $SRC/packages/bsp/rockchip/asound.conf $destination/etc/

	return 0 # exit with success

}
